{
  "version": 3,
  "sources": ["../../../app/routes/_index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.jsx\");\n  import.meta.hot.lastModified = \"1704909581129.569\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from 'react';\nconst IFRAME_SANDBOX_ATTRIBUTE = 'allow-forms allow-orientation-lock ' + 'allow-pointer-lock allow-popups-to-escape-sandbox ' + 'allow-same-origin allow-scripts ' + 'allow-top-navigation-by-user-activation allow-popups';\nconst IFRAME_ALLOW_ATTRIBUTE = 'clipboard-read; clipboard-write;';\nconst SECOND = 1000;\nexport default function MainRoute() {\n  _s();\n  const [inputData, setInputData] = useState('');\n  const [outputData, setOutputData] = useState('');\n  const [isTesting, setIsTesting] = useState(false);\n  const [batchSize, setBatchSize] = useState(1);\n  const [batchTimeout, setBatchTimeout] = useState(5);\n  useEffect(() => {\n    setOutputData('');\n  }, [inputData]);\n  const test = async () => {\n    setIsTesting(true);\n    try {\n      const apps = JSON.parse(inputData).map(app => ({\n        ...app,\n        internalWallet: false\n      }));\n      window.addEventListener('message', event => {\n        if (event.data.method === 'getSafeInfo') {\n          const iframes = Array.from(document.querySelectorAll('iframe'));\n          const iframe = iframes.find(i => i.contentWindow === event.source);\n          if (iframe) {\n            const index = apps.findIndex(app => app.id === iframe.id);\n            apps[index].internalWallet = true;\n            iframe.remove();\n          }\n        }\n      });\n      async function processBatch(batch) {\n        return Promise.all(batch.map(app => new Promise(resolve => {\n          const iframe = document.createElement('iframe');\n          iframe.id = app.id;\n          iframe.src = app.url;\n          iframe.sandbox = IFRAME_SANDBOX_ATTRIBUTE;\n          iframe.allow = IFRAME_ALLOW_ATTRIBUTE;\n          document.body.appendChild(iframe);\n          setTimeout(() => {\n            iframe.remove();\n            resolve();\n          }, batchTimeout * SECOND);\n        })));\n      }\n      for (let i = 0; i < apps.length; i += batchSize) {\n        const batch = apps.slice(i, i + batchSize);\n        await processBatch(batch);\n      }\n      setOutputData(JSON.stringify(apps, null, \"  \"));\n    } catch (e) {\n      alert(e.message);\n    }\n    setIsTesting(false);\n  };\n  return <div className=\"container\">\n      <div className=\"row flex-start margin-bottom margin-top\">\n        <div className=\"row\">\n          <span>Batch size:</span>\n          <input type=\"number\" value={batchSize} onChange={e => setBatchSize(Number(e.target.value))} />\n        </div>\n        <div className=\"row\">\n          <span>Batch timeout (seconds):</span>\n          <input type=\"number\" value={batchTimeout} onChange={e => setBatchTimeout(Number(e.target.value))} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"column\">\n          <span>Enter the list of dApps:</span>\n          <textarea value={inputData} onChange={e => setInputData(e.target.value)} />\n        </div>\n        <button onClick={test} disabled={isTesting}>Test</button>\n        <div className=\"column\">\n          <span>Results:</span>\n          <textarea value={isTesting ? 'Testing...' : outputData} readOnly />\n        </div>\n      </div>\n    </div>;\n}\n_s(MainRoute, \"53JcGELPeHppnKicDWYEtgGO0D0=\");\n_c = MainRoute;\nvar _c;\n$RefreshReg$(_c, \"MainRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;AAqBA,mBAA2C;AA2DjC;AA/EV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,2BAA2B;AACjC,IAAM,yBAAyB;AAC/B,IAAM,SAAS;AACA,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,CAAC,WAAW,YAAY,QAAI,uBAAS,EAAE;AAC7C,QAAM,CAAC,YAAY,aAAa,QAAI,uBAAS,EAAE;AAC/C,QAAM,CAAC,WAAW,YAAY,QAAI,uBAAS,KAAK;AAChD,QAAM,CAAC,WAAW,YAAY,QAAI,uBAAS,CAAC;AAC5C,QAAM,CAAC,cAAc,eAAe,QAAI,uBAAS,CAAC;AAClD,8BAAU,MAAM;AACd,kBAAc,EAAE;AAAA,EAClB,GAAG,CAAC,SAAS,CAAC;AACd,QAAM,OAAO,YAAY;AACvB,iBAAa,IAAI;AACjB,QAAI;AACF,YAAM,OAAO,KAAK,MAAM,SAAS,EAAE,IAAI,UAAQ;AAAA,QAC7C,GAAG;AAAA,QACH,gBAAgB;AAAA,MAClB,EAAE;AACF,aAAO,iBAAiB,WAAW,WAAS;AAC1C,YAAI,MAAM,KAAK,WAAW,eAAe;AACvC,gBAAM,UAAU,MAAM,KAAK,SAAS,iBAAiB,QAAQ,CAAC;AAC9D,gBAAM,SAAS,QAAQ,KAAK,OAAK,EAAE,kBAAkB,MAAM,MAAM;AACjE,cAAI,QAAQ;AACV,kBAAM,QAAQ,KAAK,UAAU,SAAO,IAAI,OAAO,OAAO,EAAE;AACxD,iBAAK,KAAK,EAAE,iBAAiB;AAC7B,mBAAO,OAAO;AAAA,UAChB;AAAA,QACF;AAAA,MACF,CAAC;AACD,qBAAe,aAAa,OAAO;AACjC,eAAO,QAAQ,IAAI,MAAM,IAAI,SAAO,IAAI,QAAQ,aAAW;AACzD,gBAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,iBAAO,KAAK,IAAI;AAChB,iBAAO,MAAM,IAAI;AACjB,iBAAO,UAAU;AACjB,iBAAO,QAAQ;AACf,mBAAS,KAAK,YAAY,MAAM;AAChC,qBAAW,MAAM;AACf,mBAAO,OAAO;AACd,oBAAQ;AAAA,UACV,GAAG,eAAe,MAAM;AAAA,QAC1B,CAAC,CAAC,CAAC;AAAA,MACL;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,WAAW;AAC/C,cAAM,QAAQ,KAAK,MAAM,GAAG,IAAI,SAAS;AACzC,cAAM,aAAa,KAAK;AAAA,MAC1B;AACA,oBAAc,KAAK,UAAU,MAAM,MAAM,IAAI,CAAC;AAAA,IAChD,SAAS,GAAP;AACA,YAAM,EAAE,OAAO;AAAA,IACjB;AACA,iBAAa,KAAK;AAAA,EACpB;AACA,SAAO,mDAAC,SAAI,WAAU,aAClB;AAAA,uDAAC,SAAI,WAAU,2CACb;AAAA,yDAAC,SAAI,WAAU,OACb;AAAA,2DAAC,UAAK,2BAAN;AAAA;AAAA;AAAA;AAAA,eAAiB;AAAA,QACjB,mDAAC,WAAM,MAAK,UAAS,OAAO,WAAW,UAAU,OAAK,aAAa,OAAO,EAAE,OAAO,KAAK,CAAC,KAAzF;AAAA;AAAA;AAAA;AAAA,eAA4F;AAAA,WAF9F;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SAAI,WAAU,OACb;AAAA,2DAAC,UAAK,wCAAN;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,QAC9B,mDAAC,WAAM,MAAK,UAAS,OAAO,cAAc,UAAU,OAAK,gBAAgB,OAAO,EAAE,OAAO,KAAK,CAAC,KAA/F;AAAA;AAAA;AAAA;AAAA,eAAkG;AAAA,WAFpG;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,IACA,mDAAC,SAAI,WAAU,OACb;AAAA,yDAAC,SAAI,WAAU,UACb;AAAA,2DAAC,UAAK,wCAAN;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,QAC9B,mDAAC,cAAS,OAAO,WAAW,UAAU,OAAK,aAAa,EAAE,OAAO,KAAK,KAAtE;AAAA;AAAA;AAAA;AAAA,eAAyE;AAAA,WAF3E;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,YAAO,SAAS,MAAM,UAAU,WAAW,oBAA5C;AAAA;AAAA;AAAA;AAAA,aAAgD;AAAA,MAChD,mDAAC,SAAI,WAAU,UACb;AAAA,2DAAC,UAAK,wBAAN;AAAA;AAAA;AAAA;AAAA,eAAc;AAAA,QACd,mDAAC,cAAS,OAAO,YAAY,eAAe,YAAY,UAAQ,QAAhE;AAAA;AAAA;AAAA;AAAA,eAAiE;AAAA,WAFnE;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,OArBG;AAAA;AAAA;AAAA;AAAA,SAsBL;AACJ;AACA,GAAG,WAAW,8BAA8B;AAC5C,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
